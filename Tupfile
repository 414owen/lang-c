export PKG_CONFIG_PATH
export PKG_CONFIG_PATH_FOR_TARGET
export PKG_CONFIG_FOR_TARGET
export CPATH

export CC
export CXX
export CFLAGS
export CXXFLAGS

RE2C_OPTIONS = --case-ranges
COMMON_FLAGS = \
    -Wall \
    -Wextra \
    -pipe \
    -ffast-math \
    -fshort-enums \
    $CFLAGS \
    `pkg-config --cflags "libeditline"` -fdiagnostics-color=always \
    -D_POSIX_C_SOURCE=200809L

CXXFLAGS = $(COMMON_FLAGS) -std=gnu++17 $CXXFLAGS -fno-exceptions

# This seems to get tinycc to pick up c11, but gcc/clang to pick up gnu11
CFLAGS = $(COMMON_FLAGS) -std=c11 -std=gnu11

common_objs += bitset.o
common_objs += consts.o
common_objs += diagnostic.o
common_objs += dir_exists.o
# common_objs += ir.o
common_objs += mkdir_p.o
common_objs += parser.o
common_objs += parse_tree.o
common_objs += rm_r.o
common_objs += scope.o
common_objs += strint.o
common_objs += tokenizer.o
common_objs += typecheck.o
common_objs += type.o
common_objs += util.o
common_objs += vec.o
common_objs += llvm.o
common_objs += llvm_shim.o

test_objs += run_tests.o
test_objs += test_bitset.o
test_objs += test.o
test_objs += test_ir.o
test_objs += test_llvm.o
test_objs += test_parser.o
test_objs += test_scanner.o
test_objs += test_strint.o
test_objs += test_typecheck.o
test_objs += test_utils.o
test_objs += test_vec.o
test_objs += args.o

LDFLAGS = `pkg-config --libs "libeditline"`
LDFLAGS += `llvm-config --cxxflags --ldflags --libs core executionengine mcjit engine analysis native bitwriter --system-libs`

: src/tokenizer.re |> re2c $(RE2C_OPTIONS) -o %o %f |> src/tokenizer.c
: src/parser.y |> ./scripts/gen-parser.sh |> src/parser.c src/parser.h
: foreach src/*.c | src/parser.h |> $CC $(CFLAGS) -c -o %o %f |> %B.o
: foreach src/*.cpp |> $CXX $(CXXFLAGS) -c -o %o %f |> %B.o
: $(common_objs) repl.o |> $CXX $(CXXFLAGS) $(LDFLAGS) -o %o %f |> repl
: $(common_objs) $(test_objs) |> $CXX $(CXXFLAGS) $(LDFLAGS) -o %o %f |> test
