export PKG_CONFIG_PATH
export PKG_CONFIG_PATH_FOR_TARGET
export PKG_CONFIG_FOR_TARGET
export C_INCLUDE_PATH
export CPLUS_INCLUDE_PATH

export CC
export CXX
export CFLAGS
export CXXFLAGS

RE2C_OPTIONS = --case-ranges
CFLAGS = -Wall -Wextra -pipe $CFLAGS `pkg-config --cflags "libeditline"` -fdiagnostics-color=always
CXXFLAGS = $(CFLAGS) $CXXFLAGS -fno-exceptions

common_objs += dir_exists.o
common_objs += mkdir_p.o
common_objs += consts.o
common_objs += bitset.o
common_objs += parser.o
common_objs += parse_tree.o
common_objs += diagnostic.o
common_objs += rm_r.o
common_objs += scope.o
common_objs += type.o
common_objs += typecheck.o
common_objs += tokenizer.o
common_objs += util.o
common_objs += vec.o

test_objs += run_tests.o
test_objs += test.o
test_objs += test_bitset.o
test_objs += test_parser.o
test_objs += test_scanner.o
test_objs += test_utils.o
test_objs += test_vec.o
test_objs += test_typecheck.o

LDFLAGS = `llvm-config --cflags --ldflags --libs core executionengine mcjit interpreter analysis native bitwriter --system-libs`
LDFLAGS += `pkg-config --libs "libeditline"`

: src/tokenizer.re |> re2c $(RE2C_OPTIONS) -o %o %f |> src/tokenizer.c
: src/parser.y |> ./scripts/gen-parser.sh |> src/parser.c src/parser.h
: foreach src/*.c | src/parser.h |> $CC $(CFLAGS) -c -o %o %f |> %B.o
: src/llvm.cpp src/parser.h |> $CXX $(CXXFLAGS) $(LDFLAGS) -c -o %o src/llvm.cpp |> llvm.o
: $(common_objs) llvm.o repl.o |> $CXX $(CXXFLAGS) -ledit $(LDFLAGS) -o %o %f |> repl
: $(common_objs) $(test_objs) |> $CC -Wall -Werror $(LDFLAGS) -o %o %f |> test
