export PKG_CONFIG_PATH
export PKG_CONFIG_PATH_FOR_TARGET
export PKG_CONFIG_FOR_TARGET
export CPATH

export CC
export CXX
export CFLAGS
export CXXFLAGS

export EDITLINE_LIBS
export EDITLINE_CFLAGS
export LLVM_CONFIG_FLAGS

RE2C_OPTIONS = --case-ranges
COMMON_FLAGS = \
    -Wall \
    -Wextra \
    -Werror=implicit-fallthrough \
    -pipe \
    -ffast-math \
    -fshort-enums \
    $CFLAGS \
    $EDITLINE_CFLAGS \
    -fdiagnostics-color=always

CXXFLAGS = $(COMMON_FLAGS) -std=gnu++17 $CXXFLAGS -fno-exceptions

# This seems to get tinycc to pick up c11, but gcc/clang to pick up gnu11
CFLAGS = $(COMMON_FLAGS) -std=c11 -std=gnu11

common_objs += bitset.o
common_objs += consts.o
common_objs += diagnostic.o
common_objs += dir_exists.o
common_objs += mkdir_p.o
common_objs += parser.o
common_objs += parse_tree.o
common_objs += scope.o
common_objs += strint.o
common_objs += tokenizer.o
common_objs += token.o
common_objs += typecheck.o
common_objs += type.o
common_objs += util.o
common_objs += vec.o
common_objs += llvm.o
common_objs += llvm_shim.o
common_objs += args.o
common_objs += timespec.o

test_objs += run_tests.o
test_objs += span.o
test_objs += test_bitset.o
test_objs += test.o
test_objs += test_ir.o
test_objs += test_llvm.o
test_objs += test_parser.o
test_objs += test_diagnostics.o
test_objs += test_scanner.o
test_objs += test_strint.o
test_objs += test_typecheck.o
test_objs += test_upto.o
test_objs += test_utils.o
test_objs += test_vec.o

main_objs += main.o
main_objs += repl.o

LDFLAGS = $EDITLINE_LIBS
LDFLAGS += $LLVM_CONFIG_FLAGS

COMPILE_C_FAST = "$CC -O2 $(CFLAGS) -c -o %o %f"
COMPILE_C_SMALL = $CC -O2 $(CFLAGS) -c -o %o %f 

: src/tokenizer.re |> re2c $(RE2C_OPTIONS) -o %o %f |> src/tokenizer.c
: src/parser.y |> ./scripts/gen-parser.sh |> src/parser.c src/parser.h

: src/parser.c     | src/parser.h |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/parse_tree.c | src/parser.h |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/repl.c       | src/parser.h |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/tokenizer.c  | src/parser.h |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/bitset.c      |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/consts.c      |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/diagnostic.c  |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/dir_exists.c  |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/mkdir_p.c     |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/scope.c       |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/span.c        |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/strint.c      |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/typecheck.c   |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/type.c        |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/util.c        |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/vec.c         |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/llvm.c        |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/llvm_shim.cpp |> ^j^ $CXX -O2 $(CXXFLAGS) -c -o %o %f |> %B.o

: src/test_llvm.c      | src/parser.h |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_parser.c    | src/parser.h |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_typecheck.c | src/parser.h |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_scanner.c   | src/parser.h |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/run_tests.c        |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_bitset.c      |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test.c             |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_diagnostics.c |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_ir.c          |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_strint.c      |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_utils.c       |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_vec.c         |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/test_upto.c        |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/timespec.c         |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/token.c            |> ^j^ $CC -O2 $(CFLAGS) -c -o %o %f |> %B.o
: src/args.c             |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o
: src/main.c             |> ^j^ $CC -Os $(CFLAGS) -c -o %o %f |> %B.o

: $(common_objs) $(main_objs) |> ^j^ $CXX $(CXXFLAGS) $(LDFLAGS) -o %o %f |> main
: $(common_objs) $(test_objs) |> ^j^ $CXX $(CXXFLAGS) $(LDFLAGS) -o %o %f |> test
